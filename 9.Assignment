
# Assignment Questions 9

<aside>
ðŸ’¡ **Q.1** What are hooks in react? how to identify hooks?

Hooks:
They provide a way to add state and side effects to functional components, making it easier to manage stateful logic and reuse code

By convention, any function starting with "use" that is called within a functional component is a hook.

ðŸ’¡ **Q.2** Explain useState Hook & what can you achieve with it?

It allows you to add stateful behavior to functional components without the need for class components. 
With useState, you can achieve dynamic and interactive UIs by managing and updating state within your components.

User Input Handling: useState is often used to manage user input in forms or interactive components. 
You can capture and update user input as state changes.

Toggle States: You can easily toggle between different states (e.g., showing/hiding content, enabling/disabling features) by updating the state variable.

ðŸ’¡ **Q.3** How to pass data from one component to another component

Passing data from one component to another component in React can be accomplished through several methods, depending on the relationship between the components and the direction of data flow.

Props (Parent to Child):
You can pass data from a parent component to a child component using props. This is the most straightforward way to share data within a component hierarchy.

ParentComponent.js:

import React from 'react';
import ChildComponent from './ChildComponent';

function ParentComponent() {
  const data = 'Hello from Parent';
  return <ChildComponent data={data} />;
}

export default ParentComponent;

ChildComponent.js:

import React from 'react';

function ChildComponent(props) {
  return <div>{props.data}</div>;
}

export default ChildComponent;

 Callback Functions (Child to Parent):
To pass data from a child component to a parent component, you can define a callback function in the parent and pass it as a prop to the child.

ParentComponent.js:

import React, { useState } from 'react';
import ChildComponent from './ChildComponent';

function ParentComponent() {
  const [receivedData, setReceivedData] = useState('');

  const handleChildData = (data) => {
    setReceivedData(data);
  };

  return (
    <div>
      <ChildComponent onDataReceived={handleChildData} />
      <p>Received data: {receivedData}</p>
    </div>
  );
}

export default ParentComponent;

ChildComponent.js:

import React from 'react';

function ChildComponent(props) {
  const sendDataToParent = () => {
    const data = 'Data from Child';
    props.onDataReceived(data);
  };

  return (
    <div>
      <button onClick={sendDataToParent}>Send Data to Parent</button>
    </div>
  );
}

export default ChildComponent;

ðŸ’¡ **Q.4** What is the significance of the "key" prop in React lists, and why is it important to use it correctly?

</aside>

<aside>
ðŸ’¡ **Q.5** What is the significance of using "setState" instead of modifying state directly in React?

</aside>

<aside>
ðŸ’¡  **Q.6** Explain the concept of React fragments and when you should use them.

</aside>

<aside>
ðŸ’¡ **Q.7** How do you handle conditional rendering in React?

</aside>

<aside>
ðŸ’¡ **Q.8**  Create a Simple Todo Web App with following features Using React :

- An input button where users can type their tasks.
- On clicking the submit button, the entered task should be displayed in the UI.
- The UI layout should resemble the image provided.

![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/d2144127-1975-4844-9ebd-fcbf44dc402f/Untitled.png)

</aside>

<aside>
ðŸ’¡ **Q. 9** Expand the existing todo web app with two additional functionalities:

1. On clicking the "Update Status" button:
    - Update the status of the task.
    
2. On clicking the "Remove Todo" button:
    - Remove the selected todo from the UI.
    - Ensure that the deleted todo is no longer visible in the todo list.

See below **Image** for **Reference** 

![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/d2144127-1975-4844-9ebd-fcbf44dc402f/Untitled.png)

</aside>

<aside>
ðŸ’¡ **Q. 10** Build Calculator Web app using React, See below image for reference

![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/070b23de-76aa-4711-b5d5-4d48a1f6536d/Untitled.png)

</aside>
